name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '5 4 * * 1'

jobs:
  test:
    name: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['windows']
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: |
          powershell -command "[System.Environment]::SetEnvironmentVariable('GITHUB_SCRIPT', ('{0}' -replace '\\','\\')); dir Env:; [System.Environment]::SetEnvironmentVariable('PKG_CONFIG_PATH_MSYS', $Env:PKG_CONFIG_PATH); [System.Environment]::SetEnvironmentVariable('PATH_MSYS', $Env:Path);"
          msys2 -c 'if [[ -v MSYSTEM ]]; then sed -i 1d $(cygpath $GITHUB_SCRIPT); sed -i \$d $(cygpath $GITHUB_SCRIPT); if [[ -v PKG_CONFIG_PATH_MSYS ]]; then export PKG_CONFIG_PATH=$PKG_CONFIG_PATH_MSYS; fi; echo PATH is $PATH; echo PATH_MSYS is $PATH_MSYS; echo PATH will be $(echo $PATH_MSYS | sed s/D:\\\\// | sed s/\;/:/g); if [[ -v PATH_MSYS && ! ( $PATH_MSYS =~ ^D:\\\\a\\\\_temp ) ]]; then export PATH=$(echo $PATH_MSYS | sed s/D:\\a\\_temp\\msys\;// | sed s/\;/:/g); fi; fi; source $(cygpath $GITHUB_SCRIPT)'
    steps:
    - name: msys2 linux compatibility
      if: matrix.os != 'windows'
      run: |
        alias powershell=:
        alias msys2=bash
    - name: Setup msys2
      if: matrix.os == 'windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - name: Show the original path
      run: echo $PATH
    - name: Setup paths and env
      run: |
        echo "PKG_CONFIG_PATH=pkgconfig_msys_test1:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=ldlibrary_msys_test1" >> $GITHUB_ENV
        echo "PATH=/path_msys_test1:$PATH" >> $GITHUB_ENV
        echo "/path_msys_test2" >> $GITHUB_PATH
        echo $PATH
    - name: Test env
      run: |
        echo $PKG_CONFIG_PATH
        echo $PKG_CONFIG_PATH | egrep ^pkgconfig_msys_test1:
        echo $LD_LIBRARY_PATH
        echo $LD_LIBRARY_PATH | egrep ^ldlibrary_msys_test1$
        echo $PATH
        #echo $PATH | egrep ^/path_msys_test2:/path_msys_test1
    - name: Setup one more
      run: |
        echo "FOO=BAR" >> $GITHUB_ENV
        echo "/msys_ci_test_path/hooray" >> $GITHUB_PATH
    - name: Test env
      run: |
        echo $PKG_CONFIG_PATH
        echo $PKG_CONFIG_PATH | egrep ^pkgconfig_msys_test1:
        echo $LD_LIBRARY_PATH
        echo $LD_LIBRARY_PATH | egrep ^ldlibrary_msys_test1$
        echo $PATH
        #echo $PATH | egrep ^/msys_ci_test_path/hooray:/path_msys_test2:/path_msys_test1
        echo $FOO
        echo $FOO | egrep ^BAR$
    - name: Another path
      run: |
        echo "PATH=/msys_ci_test/whatnow:$PATH" >> $GITHUB_ENV
    - name: Test env
      run: |
        echo $PKG_CONFIG_PATH
        echo $PKG_CONFIG_PATH | egrep ^pkgconfig_msys_test1:
        echo $LD_LIBRARY_PATH
        echo $LD_LIBRARY_PATH | egrep ^ldlibrary_msys_test1$
        echo $PATH
        #echo $PATH | egrep ^/msys_ci_test_path/hooray:/path_msys_test2:/path_msys_test1
        echo $FOO
        echo $FOO | egrep ^BAR$
    - name: Overwrite an old one
      run: |
        echo "FOO=WHYNOT" >> $GITHUB_ENV
    - name: Test env
      run: |
        echo $PKG_CONFIG_PATH
        echo $PKG_CONFIG_PATH | egrep ^pkgconfig_msys_test1:
        echo $LD_LIBRARY_PATH
        echo $LD_LIBRARY_PATH | egrep ^ldlibrary_msys_test1$
        echo $PATH
        #echo $PATH | egrep ^/msys_ci_test_path/hooray:/path_msys_test2:/path_msys_test1
        echo $FOO
        echo $FOO | egrep ^WHYNOT$
    - name: Check that uname works
      run: uname -a
